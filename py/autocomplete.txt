define
:b
:n
:s
:c
:p
:f
:call
set-type
type?
+
-
*
/
rem
floor
^
log
log10
log<n>
shift
and
or
xor
random
sqrt
lt?
gt?
lteq?
gteq?
eq?
-eq?
if
while
until
times
invoke
dip
sip
bi
tri
copy
fetch
store
request
release
collect-garbage
get-last-index
set-last-index
set-stored-type
get-stored-type
dup
drop
swap
over
tuck
nip
depth
reset
function-exists?
lookup-function
hide-function
lookup-name
find
subslice
numeric?
reverse
to-lowercase
to-uppercase
report-error
sin
cos
tan
asin
acos
atan
atan2
number
string
character
pointer
flag
bytecode
comment
function-call
:comment
dup-pair
drop-pair
drop-multiple
invoke<depth?>
last-index?
slice-length?
adjust-slice-length
duplicate-slice
length?
variable
@
!
variable!
off
on
increment
decrement
zero-out
preserve
max
min
abs
bi*
tri*
bi@
tri@
true
false
not
if-true
if-false
nan?
zero?
true?
false?
even?
odd?
negative?
positive?
if-character
if-string
if-number
if-pointer
if-flag
between?
types-match?
expand-range
sum-range
hide-functions
rename-function
redefine
variables
string-contains?
digit?
symbol?
letter?
alphanumeric?
consonant?
vowel?
lowercase?
uppercase?
build-string
trim-left
trim-right
trim
*buffer-offset
*current-buffer
current-buffer
buffer-position
buffer-advance
buffer-retreat
buffer-store-current
buffer-fetch-current
buffer-store
buffer-fetch
buffer-store-retreat
buffer-fetch-retreat
set-buffer
buffer-store-items
new-buffer
preserve-buffer
named-buffer
cons
curry
to
(value-handler)
value
value!
values
first
rest
last
push
pop
request-empty
reduce
for-each
contains?
filter
map
capture-results
index-of
*tob
.
show-tob
clear-tob
*internals
{
}
*hash-prime
hash:xor
hash:djb2
hash:sdbm
chosen-hash
hash
when
split
join
clean-string
replace
interpolate
apropos
