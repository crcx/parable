[ 'remove-entries'  'marker'  'anew'  ] 'Marker~' {
  [ 'needle' 'haystack' ] ::

  [ "-p" \
    @haystack dup [ @needle index-of ] [ length? ] bi subslice ] '(extract)' :

  [ "-s" vm.dict<names> tail ] 'last-name' :

  [ "s-" \
    !needle  vm.dict<names> !haystack \
    @haystack @needle contains? [ (extract) hide-words ] if-true \
    "Remove all including and following the specified name." \
  ] 'remove-entries' :

  [ "s-" \
    var last-name [ remove-entries ] curry last-name : \
    "A marker is a function that resets the dictionary to the state it was \
     in prior to the creation of the marker." \
  ] 'marker' :

  [ "s-" \
    dup word-exists? [ dup lookup-word invoke ] if-true marker \
    "If the specified name exists, remove it and all subsequent names. Then \
     create a new marker with the specified name." \
  ] 'anew' :
}}

